"use strict";(self.webpackChunkapex_fp_docs=self.webpackChunkapex_fp_docs||[]).push([[680],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),s=p(n),f=a,m=s["".concat(l,".").concat(f)]||s[f]||u[f]||i;return n?r.createElement(m,c(c({ref:t},d),{},{components:n})):r.createElement(m,c({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=s;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var p=2;p<i;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},4716:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return s}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),c=["components"],o={},l="Match",p={unversionedId:"api/function/match",id:"api/function/match",isDocsHomePage:!1,title:"Match",description:"Match is a matching predicate factory.",source:"@site/docs/api/function/match.md",sourceDirName:"api/function",slug:"/api/function/match",permalink:"/api/function/match",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IncompleteFieldsMatch",permalink:"/api/function/incomplete-fields-match"},next:{title:"RecordMatch",permalink:"/api/function/record-match"}},d=[{value:"<code>recordFields</code>",id:"recordfields",children:[]},{value:"<code>field</code>",id:"field",children:[]}],u={toc:d};function s(e){var t=e.components,n=(0,a.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"match"},(0,i.kt)("inlineCode",{parentName:"h1"},"Match")),(0,i.kt)("p",null,"Match is a matching predicate factory."),(0,i.kt)("h2",{id:"recordfields"},(0,i.kt)("inlineCode",{parentName:"h2"},"recordFields")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Signature")),(0,i.kt)("p",null,"Builds a record field matching predicate. The predicate returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," when applied to a record which matches all fields defined on the ",(0,i.kt)("inlineCode",{parentName:"p"},"prototype")," record. Fields that are not defined on the ",(0,i.kt)("inlineCode",{parentName:"p"},"prototype")," are not checked for equality. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-apex"},"RecordFieldsMatch recordFields(SObject prototype)\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-apex"},"RecordFieldsMatch isMatch = Match.recordFields(new Account{Name = 'Foo'});\nisMatch.apply(new Account{Name = 'Foo', Description = 'Some description'}); // true\nisMatch.apply(new Account{Name = 'Bar'}); // false\n")),(0,i.kt)("h2",{id:"field"},(0,i.kt)("inlineCode",{parentName:"h2"},"field")),(0,i.kt)("p",null,"Starts the construction of a field criteria matching function by defining a field. The field can be defined as an ",(0,i.kt)("inlineCode",{parentName:"p"},"Schema.SObjectField")," or given as a ",(0,i.kt)("inlineCode",{parentName:"p"},"String")," relation. Returns an ",(0,i.kt)("a",{parentName:"p",href:"incomplete-fields-match"},(0,i.kt)("inlineCode",{parentName:"a"},"IncompleteFieldsMatch"))," which can be completed into a ",(0,i.kt)("a",{parentName:"p",href:"fields-match"},(0,i.kt)("inlineCode",{parentName:"a"},"FieldsMatch"))," by invoking methods on it."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Signature")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-apex"},"IncompleteFieldsMatch field(Schema.SObjectField field)\nIncompleteFieldsMatch field(String fieldPath)\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-apex"},"Match.field(Opportunity.Amount).lessThan(10000)\nMatch.field('Parent.Id').equals(accountId);\n")))}s.isMDXComponent=!0}}]);