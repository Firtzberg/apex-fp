"use strict";(self.webpackChunkapex_fp_docs=self.webpackChunkapex_fp_docs||[]).push([[231],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=d(n),f=r,m=s["".concat(c,".").concat(f)]||s[f]||u[f]||i;return n?a.createElement(m,l(l({ref:t},p),{},{components:n})):a.createElement(m,l({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},3886:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return s}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={},c="FieldsMatch",d={unversionedId:"api/function/fields-match",id:"api/function/fields-match",isDocsHomePage:!1,title:"FieldsMatch",description:"FieldsMatch implements SObjectPredicate and returns true if a record satisfies all field matching conditions currently defined. FieldsMatch is constructed from an IncompleteFieldsMatch with a fluent interface. Additional conditions can be defined with also, or its alias, field:",source:"@site/docs/api/function/fields-match.md",sourceDirName:"api/function",slug:"/api/function/fields-match",permalink:"/api/function/fields-match",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DoublePredicate",permalink:"/api/function/double-predicate"},next:{title:"IncompleteFieldsMatch",permalink:"/api/function/incomplete-fields-match"}},p=[{value:"<code>also</code> (alias <code>field</code>)",id:"also-alias-field",children:[]}],u={toc:p};function s(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"fieldsmatch"},(0,i.kt)("inlineCode",{parentName:"h1"},"FieldsMatch")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FieldsMatch")," implements ",(0,i.kt)("inlineCode",{parentName:"p"},"SObjectPredicate")," and returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if a record satisfies all field matching conditions currently defined. ",(0,i.kt)("inlineCode",{parentName:"p"},"FieldsMatch")," is constructed from an ",(0,i.kt)("inlineCode",{parentName:"p"},"IncompleteFieldsMatch")," with a fluent interface. Additional conditions can be defined with ",(0,i.kt)("inlineCode",{parentName:"p"},"also"),", or its alias, ",(0,i.kt)("inlineCode",{parentName:"p"},"field"),":"),(0,i.kt)("h2",{id:"also-alias-field"},(0,i.kt)("inlineCode",{parentName:"h2"},"also")," (alias ",(0,i.kt)("inlineCode",{parentName:"h2"},"field"),")"),(0,i.kt)("p",null,"Adds another field condition to the chain."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Signature")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"Alias"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"IncompleteFieldsMatch also(Schema.SObjectField field)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"field")),(0,i.kt)("td",{parentName:"tr",align:null},"Defines another condition to match")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"IncompleteFieldsMatch also(String fieldPath)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"field")),(0,i.kt)("td",{parentName:"tr",align:null},"Defines another condition to match")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-apex"},"FieldsMatch m = Match.field(Account.Name).equals('Foo').also(Account.AnnualRevenue).greaterThan(100000);\n")))}s.isMDXComponent=!0}}]);